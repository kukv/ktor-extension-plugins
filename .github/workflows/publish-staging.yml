name: publish-staging

on:
  push:
    tags:

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      cache-key: ${{ steps.weekly.cache-key.outputs.key }}
    steps:
      - id: weekly-cache-key
        run: echo "key=$(TZ=Asia/Tokyo date +%W)" >> $GITHUB_OUTPUT

  publish-staging:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Gradle Wrapper Cache
        uses: ./.github/actions/gradle-cache-strategy/wrapper-cache

      - name: Gradle Dependencies Cache
        uses: ./.github/actions/gradle-cache-strategy/dependencies-cache
        with:
          cache-key: ${{ needs.setup.outputs.cache-key }}

      - name: Gradle Build Cache
        uses: ./.github/actions/gradle-cache-strategy/build-cache
        with:
          cache-key: ${{ needs.setup.outputs.cache-key }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Grant Execute Permission to gradlew
        run: chmod +x gradlew

      - name: publishing staging
        env:
          SNAPSHOT_REPOSITORY_URL: ${{ vars.SNAPSHOT_REPOSITORY_URL }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          REPOSITORY_URL: ${{ vars.REPOSITORY_URL }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

        run: ./gradlew publishToSonatype closeSonatypeStagingRepository
